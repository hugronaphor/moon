<?php

/**
 * @file
 * Main module file.
 */

/**
 * Implements hook_menu().
 */
function moon_core_menu() {
  $items['admin/config/general_moon_settings'] = [
    'title' => 'Global MOON Settings',
    'type' => MENU_LOCAL_TASK,
    'description' => "Configure your sitewide MOON settings.",
    'page callback' => 'drupal_get_form',
    'page arguments' => ['moon_core_admin_form'],
    'access arguments' => ['administer nodes'],
    'file' => 'moon_core.admin.inc',
    'weight' => 5,
  ];

//  $items['node/get/ajax/%/%'] = array(
//    'page callback' => '_xgaby_core_node_get_ajax',
//    'page arguments' => array(3, 4),
//    'type' => MENU_CALLBACK,
//    'access arguments' => array('access content'),
//  );

  return $items;
}

function _xgaby_core_node_get_ajax($nid, $view_mode) {
  // Add no-store in Cache-Control.
  drupal_add_http_header(
    'Cache-Control', 'no-store, no-cache, must-revalidate, post-check=0, pre-check=0', FALSE
  );
  // Hack for Safari
  #drupal_add_js('jQuery(window).unload(function(){});', array('type' => 'inline'));
  $node = node_load($nid);
  if ($node) {
    $node_view = node_view($node, $view_mode);
    print drupal_render($node_view);
    drupal_page_footer();
    return;
  }
  drupal_not_found();
}

/**
 * Implements hook_block_info().
 */
function xgaby_core_block_info() {
  $blocks = array();

  $blocks['xgaby_social'] = array(
    'info' => t('XGaby social block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['xgaby_home_main'] = array(
    'info' => t('Main Block on home page'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['xgaby_mini_contact'] = array(
    'info' => t('Bottom Contact Mini'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['xgaby_find_me_links'] = array(
    'info' => t('Find Me Links'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['xgaby_homepage_slider'] = array(
    'info' => t('Homepage slider.'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_node_view().
 */
function moon_core_node_view($node, $view_mode) {


  if ($node->type != 'photo') {
    return;
  }

  switch ($view_mode) {
    case 'teaser':

      if (!empty($node->field_image_multiple[LANGUAGE_NONE])) {
        foreach ($node->content['field_image_multiple'] as $key => $value) {
          if (is_int($key) && $key > 0) {
            unset($node->content['field_image_multiple'][$key]);
          }
        }
      }

      break;
  }
}

/**
 * Implements hook_block_view().
 */
function xgaby_core_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'xgaby_social':
      $vars = _xgaby_core_get_social_data();
      $block['content'] = theme('xgaby_social', $vars);
      break;

    case 'xgaby_home_main':
      $main_menu = menu_navigation_links('main-menu');
      $vars['main_menu'] = theme('links__system_main_menu', [
        'links' => $main_menu,
        'attributes' => [
          'id' => 'main-menu',
          'class' => ['links', 'inline', 'clearfix'],
        #'heading' => t('Main menu'),
        ]]
      );

      $vars['site_name'] = variable_get('site_name', 'XGABYMOOR');
      $block['content'] = theme('xgaby_home_main', $vars);
      break;

    case 'xgaby_mini_contact':
      $mini_footer = variable_get('xgaby_mini_contact');
      if ($mini_footer) {
        $block['content'] = '<div id="wrapp-mini_contact">' . $mini_footer . '</div>';
      }
      break;

    case 'xgaby_find_me_links':

      $vars = ['links' => []];
      $quantity = range(0, 4);

      foreach ($quantity as $source) {
        ++$source;
        $link = variable_get('xgaby_find_me_link_' . $source, '');
        $title = variable_get('xgaby_find_me_title_' . $source, '');
        if ($title && $link) {
          $vars['links'][$title] = $link;
        }
      }

      if (!empty($vars['links'])) {
        $block['subject'] = t('Find me live on');
        $block['content'] = theme('xgaby_find_me_links', $vars);
      }
      break;

    case 'xgaby_homepage_slider':
      $files = file_scan_directory(drupal_get_path('theme', 'xgaby') . '/images/home_slider', '/[png|jpg|jpeg]/');
      ksort($files);
      $output = '<ul id="h-slider">';
      $i = 0;
      foreach ($files as $uri => $file_data) {
        $output .= '<li class="home-slide home-slide-' . $i . '">';
        $output .= '<img src="' . $uri . '" >';
        $output .= '</li>';
        ++$i;
      }
      $output = $output . '<li>';
      $output = '';
      if (isset($output)) {
        $block['content'] = $output;
      }
      break;
  }

  return $block;
}

/**
 * Helper funtion.
 * 
 * Detect the total number of bows.
 * @todo: Cache. Join Article type and check for bows:?
 */
//function _papio_core_count_bows() {
//
//  $query = db_select('node', 'n')
//    ->fields('n')
//    ->condition('type', 'article')
//    ->condition('status', 1);
//  $bows_count = $query->execute()->rowCount();
//
//  if ($bows_count) {
//    // Add additional zeros in order to have at least 4 digits number.
//    $bows_count_array = str_split($bows_count);
//    $bows_count_array_count = count($bows_count_array);
//
//    if ($bows_count_array_count < 4) {
//      for ($i = 1; $i <= 4 - $bows_count_array_count; $i++) {
//        $additional_zero[] = 0;
//      }
//    }
//
//    if (isset($additional_zero)) {
//      $bows_count_array = array_merge($additional_zero, $bows_count_array);
//    }
//  }
//
//  return $bows_count_array;
//}

/**
 * Helper function to retrieve the social buttons data.
 *
 * @todo Re-thing the logic. Be beautiful.
 */
function _xgaby_core_get_social_data() {
  static $vars = [];
  if (!empty($vars)) {
    return $vars;
  }
  $footer_vars = [
    'vine_site_url',
    'vimeo_site_url',
    'twitter_site_url',
  ];

  foreach ($footer_vars as $var_name) {
    $vars[$var_name] = variable_get($var_name, FALSE);
  }
  $vars['social_count'] = count($vars);

  return $vars;
}

/**
 * Implements hook_theme().
 */
function xgaby_core_theme($existing, $type, $theme, $path) {
  return array(
    'xgaby_social' => array(
      'template' => 'xgaby-social',
      'arguments' => array('vars' => NULL),
      'path' => $path . '/theme',
    ),
    'xgaby_home_main' => array(
      'template' => 'xgaby-home-main',
      'arguments' => array('vars' => NULL),
      'path' => $path . '/theme',
    ),
    'xgaby_find_me_links' => array(
      'template' => 'xgaby-find-me-links',
      'arguments' => array('vars' => NULL),
      'path' => $path . '/theme',
    ),
  );
}

/**
 * Implements hook_node_view().
 */
function HOOK_node_view($node, $view_mode) {

  switch ($view_mode) {
    case 'teaser':
      if (!empty($node->content['field_new'][0]['#markup'])) {
        $node->content['field_new'][0]['#markup'] = t('New!');
      }
      else {
        // Avoid empty field.
        unset($node->content['field_new']);
      }

      break;
  }
}

#function fibonacci() {
#    $last = 0;
#    $current = 1;
#    yield 1;
#    while (true) {
#        $current = $last + $current;
#        $last = $current - $last;
#        yield $current;
#    }
#}

function xgaby_core_preprocess_html(&$vars) {
  if (current_path() == 'homepage') {
    drupal_add_css('html, body {height: 100%;}html{overflow-y: hidden;}body{overflow-y: scroll;background-color: #000000;}', 'inline');
  }
}

function HOOK_preprocess_page(&$variables) {

  // Add header variables for usage in page.tpl.php file.
  if ($header_line_1 = variable_get('header_line_1')) {
    $variables['header_line_1'] = $header_line_1;
  }
  if ($header_line_2 = variable_get('header_line_2')) {
    $variables['header_line_2'] = $header_line_2;
  }
}

//function HOOK_form_alter(&$form, &$form_state, $form_id);

function HOOK_preprocess_views_view(&$vars) {
  $view = &$vars['view'];
  if ($view->name == 'main_list' && $view->current_display == 'main_list') {
    //dsm($view, 'main list view');
  }
}

/**
 * Implements hook_entity_info_alter().
 */
function xgaby_core_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['popular'] = [
    'label' => t('Popular'),
    'custom settings' => FALSE,
  ];
}
